<?xml version="1.0" encoding="UTF-8"?>

<FindBugsFilter>
    <Match>
        <!-- TODO: Rewrite -->
        <Class name="au.id.simo.useful.io.VarExpanderReader" />
    </Match>
    <Match>
        <!-- TODO: Describe this potential bug in constructor javadoc -->
        <!-- Its required to work this way to keep overheads low -->
        <Class name="au.id.simo.useful.io.MultiOutputStream" />
        <Bug code="EI2" />
    </Match>
    <Match>
        <!-- TODO: Review design -->
        <Class name="au.id.simo.useful.io.DetectionInputStream$Match" />
        <Bug code="EI2" />
    </Match>
    <Match>
        <!-- Essential part of the design, to avoid copying byte array. -->
        <Class name="au.id.simo.useful.io.ByteArrayResource" />
        <Bug code="EI2" />
    </Match>
    <Match>
        <!-- Unconditional wait. It is conditional, perhaps spotbugs is over eager on this one.  -->
        <Class name="au.id.simo.useful.test.ManualExecutorService" />
        <Bug code="UW" />
    </Match>
    <Match>
        <!-- TODO: Redesign Class  -->
        <Class name="au.id.simo.useful.test.ManualExecutorService" />
        <Or>
            <!-- Wait not in Loop: I don't want it in a loop?  -->
            <Bug code="Wa" />
            <!-- TODO: Review  -->
            <Bug pattern="PA_PUBLIC_MUTABLE_OBJECT_ATTRIBUTE"/>
        </Or>
    </Match>
    <Match>
        <!--
            Do not use floating-point variables as loop counters: It's ok, it's just a
            human-readable time, accuracy will be sufficient.
          -->
        <Class name="au.id.simo.useful.Stopwatch" />
        <Bug code="FL" />
    </Match>
    <Match>
        <!--
            May expose internal representation by returning reference to mutable object
          -->
        <!--Class name="au.id.simo.useful." /-->
        <Bug code="EI" />
    </Match>
    <Match>
        <!--
            May expose internal representation by incorporating reference to mutable object
          -->
        <Bug code="EI2" />
    </Match>
    <Match>
        <!--
            Transient field that isn't set by deserialization.
            This class contains a field that is updated at multiple places in the class, thus it seems to be
            part of the state of the class. However, since the field is marked as transient and not set in
            readObject or readResolve, it will contain the default value in any deserialized instance of the class.

            A List of AutoCloseables have been marked transient, as the choice to not enforce implementation of
            Serializable interface for those AutoCloseables.
          -->
        <Class name="au.id.simo.useful.DeferException" />
        <Bug code="Se" />
    </Match>
    <Match>
        <!--
            False Positive: This method does in fact close the internal OutputStream implementation.
            Even if it is within a Callable to be executed on another thread later.
        -->
        <Class name="au.id.simo.useful.io.ConcurrentGeneratorResource"/>
        <Method name="inputStream"/>
        <Bug pattern="OS_OPEN_STREAM"/>
    </Match>
    <Match>
        <!--
        TODO: Review these hits
        Removed temporarily after triggering several after a spotbugs upgrade.
        -->
        <Bug pattern="CT_CONSTRUCTOR_THROW"/>
    </Match>

</FindBugsFilter>
